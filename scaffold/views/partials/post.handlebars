{{! Partial for a single post }}
<div id={{id}} class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
        <img src={{avatar_url}} alt="Profile Image" title="Avatar" class="avatar">
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
        <h3>{{title}}</h3>
        <p>{{content}}</p>
        <div class="post-status-bar">
                {{#ifCond username user.username}}
                    <p  class='hover' onclick=handleDeleteClick(({{id}}))>üóëÔ∏è {{likes}}</p>
                {{else}}
                    <p class = ' hover not-liked likes' onclick=handleLikeClick(({{id}}))>ü§ç {{likes}}</p>
                {{/ifCond}}
                <p>{{username}}</p>
                <p>{{timestamp}}</p>
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ‚ô• -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
        </div>        
    </div>
</div>
<script>

    function handleLikeClick(postId) {
        let post = document.getElementById(postId);
        let likesEle = post.querySelector('.likes');
        let postbody = JSON.stringify({change: 'increment'})
        if (likesEle.classList.contains('liked')) {
            postbody = JSON.stringify({change: 'decrement'})
        }

        fetch('/like/' + postId, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: postbody
            })
        .then(statusCheck)
        .then(processData)
        .catch(handleError);

        function statusCheck(res) {
            if (!res.ok) {
                throw new Error('Failed to fetch: ' + res.statusText);
            }
            return res.json();  // Assuming the server response is in JSON format
    }

    //`````````````````````````````````````````````````````````````````````````````
        function processData(data) {
            if (data.postId) {
                let post = document.getElementById(data.postId);
                let likesEle = post.querySelector('.likes');
                if (data.change == 'increment') {
                    likesEle.textContent = '‚ù§Ô∏è ' + data.likes;
                    likesEle.classList.remove('not-liked');
                    likesEle.classList.add('liked');
                } else {
                    likesEle.textContent = 'ü§ç ' + data.likes;
                    likesEle.classList.remove('liked');
                    likesEle.classList.add('not-liked');                    
                }
                
            } else {
                console.log("Something went wrong!");
            }
        }

        function handleError(error) {
            console.error('Error updating likes', error);
        }
    }




    function handleDeleteClick(postId) {
        /*
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        
        */
        fetch('/delete/' + postId, {
            method: 'POST',
            headers: {
                
            },
            body: ""
            })
        .then(statusCheck)
        .then(processData)
        .catch(handleError);
        // you might want to "fetch" something...        
        function statusCheck(res) {
            if (!res.ok) {
                throw new Error('Failed to fetch: ' + res.statusText);
            }
            return res.json();  // Assuming the server response is in JSON format
    }

    //`````````````````````````````````````````````````````````````````````````````
        function processData(data) {
            if (data.postId) {
                let post = document.getElementById(data.postId);
                post.remove();
            } else {
                console.log("Something went wrong!");
            }
        }

        function handleError(error) {
            console.error('Error removing post', error);
        }     
    }    
</script>